{"version":3,"sources":["ace.js"],"names":[],"mappings":"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","file":"ace.js","sourceRoot":"/source/","sourcesContent":["import {bindable,noView,customElement,skipContentProcessing} from 'aurelia-framework';\nimport ace from \"ace\";\nimport \"ace/theme-monokai\";\nimport \"ace/mode-javascript\";\n\nimport beautify from 'js-beautify';\nimport css__beautify from 'js-beautify/beautify-css';\nimport html__beautify from 'js-beautify/beautify-html';\n\nvar js_beautify = beautify.js_beautify;\nvar css_beautify = css__beautify.css_beautify;\nvar html_beautify = html__beautify.html_beautify;\n\n@noView\n@customElement('ace')\n@skipContentProcessing\nexport class AceEditor {\n\n  static options = {\n    showPrintMargin:false,\n    beautify: true,\n    mode:\"javascript\",\n    theme: \"monokai\"\n  };\n\n  static setOptions(options){\n    AceEditor.options = Object.assign(AceEditor.options,options);\n  }\n\n  @bindable value = \"\";\n\n  editor = null;\n\n  static uid = 1;\n\n  static inject = [Element];\n  constructor(element) {\n    this.element = element;\n    this._uid = ++AceEditor.uid;\n\n    //this.options = Object.assign(this.options,AceEditor.options);\n  }\n\n  bind(){\n\n  }\n\n  attached() {\n    this.id = \"ace-editor-\"+this._uid;\n    this.element.setAttribute(\"id\",this.id);\n\n    //set initial value from the innerHTML\n    if(!this.value && this.element.innerHTML) this.element.innerHTML = dedent(this.element.innerHTML).trim();\n    //set initial value from the binding\n    if(this.value){\n      this.value = this._parseValue(this.value);\n      this.element.innerHTML = dedent(this.value).trim();\n    }\n\n    var e = this.editor = ace.edit(this.id);\n    //disable scrolling into view (a deprecated feature for ace)\n    e.$blockScrolling = Infinity;\n    ace.config.set(\"basePath\", \"/jspm_packages/github/ajaxorg/ace-builds@1.1.9/\");\n\n    //e.setShowPrintMargin(false);\n    //e.setTheme(\"ace/theme/monokai\");\n    //e.getSession().setMode(\"ace/mode/javascript\");\n\n    this.updateOptions(Object.assign({},AceEditor.options));\n  }\n\n  setValue(v){\n    this.value = v;\n    this.valueChanged(v);\n    return this;\n  }\n\n  getValue(){\n    return this.editor.getValue();\n  }\n\n  valueChanged(value){\n    this.value = this._parseValue(this.value);\n    if(this.editor) this.editor.setValue(this.value,1);\n  }\n\n  setOptions(options){\n    this.updateOptions(Object.assign({},AceEditor.options,options));\n    return this;\n  }\n\n  updateOptions(options){\n    if(!this.editor) return;\n\n    console.log('options', options);\n\n    if(!options.lint){\n      this.editor.session.setUseWorker(false);\n    }else{\n      this.editor.session.setUseWorker(true);\n    }\n\n    if(options.mode) options.mode = `ace/mode/${options.mode}`;\n    if(options.theme) options.theme = `ace/theme/${options.theme}`;\n\n    //delete options not meant for ace\n    delete options.beautify;\n    delete options.lint;\n\n    this.editor.setOptions(options);\n  }\n\n  _parseValue(obj){\n    if(typeof obj == \"object\") obj = JSON.stringify(obj);\n    if(AceEditor.options.beautify) obj = this._beautify(obj, AceEditor.options.mode);\n    return obj;\n  }\n\n  /**\n   * Beautifies html, css or js code\n   *\n   * @param code {String}       String containing code\n   * @param language {String}   Code language (html, js or css)\n   *\n   * @returns {String} Beautified code\n   */\n  _beautify(code, language){\n    if(!code) return null;\n    //trim every line\n    code = code.split('\\n').map((l) => l.trim()).join('\\n');\n\n    switch(language){\n      case 'js':\n      case 'javascript':\n        code = js_beautify(code);\n        break;\n      case 'css':\n      case 'less':\n        code = css_beautify(code);\n        break;\n      case 'html':\n      case 'markup':\n        code = escapeHtml(html_beautify(unescapeHtml(code)));\n        break;\n    }\n    return code;\n  }\n\n}\n\nfunction dedent(str){\n  var match = str.match(/^[ \\t]*(?=\\S)/gm);\n  if (!match) return str;\n\n  var indent = Math.min.apply(Math, match.map(function (el) {\n    return el.length;\n  }));\n\n  var re = new RegExp('^[ \\\\t]{' + indent + '}', 'gm');\n  return indent > 0 ? str.replace(re, '') : str;\n}\n"]}